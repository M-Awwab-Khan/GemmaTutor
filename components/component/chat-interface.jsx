/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/69zAan8Zeci
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Archivo } from 'next/font/google'

archivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { Button } from "@/components/ui/button"
import { Textarea } from "@/components/ui/textarea"
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card"
import Link from "next/link"

export function ChatInterface() {
  return (
    (<div className="grid grid-cols-[1fr_300px] min-h-screen w-full bg-background">
      <div className="flex flex-col border-r">
        <div
          className="sticky top-0 z-10 flex h-14 items-center justify-between border-b bg-background px-4">
          <div className="flex items-center gap-2">
            <Avatar className="w-8 h-8 border">
              <AvatarImage src="/placeholder-user.jpg" alt="User Avatar" />
              <AvatarFallback>JD</AvatarFallback>
            </Avatar>
            <div className="font-medium">John Doe</div>
          </div>
          <Button variant="ghost" size="icon">
            <MoveHorizontalIcon className="h-5 w-5" />
          </Button>
        </div>
        <div className="flex-1 overflow-auto">
          <div className="grid gap-4 p-4">
            <div className="flex items-start gap-4">
              <Avatar className="w-8 h-8 border">
                <AvatarImage src="/placeholder-user.jpg" alt="User Avatar" />
                <AvatarFallback>JD</AvatarFallback>
              </Avatar>
              <div className="grid gap-1 rounded-lg bg-muted p-3">
                <div className="font-medium">John Doe</div>
                <div>
                  Hey there! I'm looking for some resources to help me understand the latest React features. Do you have
                  any recommendations?
                </div>
              </div>
            </div>
            <div className="flex items-start gap-4 justify-end">
              <div className="grid gap-1 rounded-lg bg-primary p-3 text-primary-foreground">
                <div className="font-medium">You</div>
                <div>Sure, I'd be happy to share some helpful resources! Let me put together a list for you.</div>
              </div>
              <Avatar className="w-8 h-8 border">
                <AvatarImage src="/placeholder-user.jpg" alt="User Avatar" />
                <AvatarFallback>YO</AvatarFallback>
              </Avatar>
            </div>
            <div className="flex items-start gap-4">
              <Avatar className="w-8 h-8 border">
                <AvatarImage src="/placeholder-user.jpg" alt="User Avatar" />
                <AvatarFallback>JD</AvatarFallback>
              </Avatar>
              <div className="grid gap-1 rounded-lg bg-muted p-3">
                <div className="font-medium">John Doe</div>
                <div>
                  That would be great, thanks! I'm especially interested in learning about hooks and the new Context
                  API.
                </div>
              </div>
            </div>
            <div className="flex items-start gap-4 justify-end">
              <div className="grid gap-1 rounded-lg bg-primary p-3 text-primary-foreground">
                <div className="font-medium">You</div>
                <div>
                  Okay, got it. I'll put together a list of resources covering hooks, the Context API, and other recent
                  React updates. Should have it for you shortly!
                </div>
              </div>
              <Avatar className="w-8 h-8 border">
                <AvatarImage src="/placeholder-user.jpg" alt="User Avatar" />
                <AvatarFallback>YO</AvatarFallback>
              </Avatar>
            </div>
          </div>
        </div>
        <div className="sticky bottom-0 z-10 border-t bg-background px-4 py-2">
          <div className="relative">
            <Textarea
              placeholder="Type your message..."
              name="message"
              id="message"
              rows={1}
              className="min-h-[48px] rounded-2xl resize-none p-4 border border-neutral-400 shadow-sm pr-16" />
            <Button type="submit" size="icon" className="absolute w-8 h-8 top-3 right-3">
              <ArrowUpIcon className="w-4 h-4" />
              <span className="sr-only">Send</span>
            </Button>
          </div>
        </div>
      </div>
      <div className="flex flex-col border-l">
        <div
          className="sticky top-0 z-10 flex h-14 items-center justify-between border-b bg-background px-4">
          <div className="font-medium">Resources</div>
          <Button variant="ghost" size="icon">
            <MoveHorizontalIcon className="h-5 w-5" />
          </Button>
        </div>
        <div className="flex-1 overflow-auto">
          <div className="grid gap-4 p-4">
            <Card>
              <CardHeader>
                <CardTitle>React Hooks</CardTitle>
                <CardDescription>Lorem ipsum</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-2">
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Intro to React Hooks
                  </Link>
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Using the useState Hook
                  </Link>
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Mastering the useEffect Hook
                  </Link>
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Understanding the useContext Hook
                  </Link>
                </div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>React Context API</CardTitle>
                <CardDescription>
                  Explore the new Context API in React and how to use it for global state management.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-2">
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Intro to the React Context API
                  </Link>
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Creating a Context Provider
                  </Link>
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Consuming Context in Components
                  </Link>
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Best Practices for Context API
                  </Link>
                </div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>React Performance Optimization</CardTitle>
                <CardDescription>
                  Improve the performance of your React applications with these techniques.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-2">
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Code Splitting in React
                  </Link>
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Memoization with React.memo
                  </Link>
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Optimizing React Renders
                  </Link>
                  <Link href="#" className="flex items-center gap-2 text-sm" prefetch={false}>
                    <FileTextIcon className="h-4 w-4" />
                    Lazy Loading in React
                  </Link>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>)
  );
}

function ArrowUpIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="m5 12 7-7 7 7" />
      <path d="M12 19V5" />
    </svg>)
  );
}


function FileTextIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z" />
      <path d="M14 2v4a2 2 0 0 0 2 2h4" />
      <path d="M10 9H8" />
      <path d="M16 13H8" />
      <path d="M16 17H8" />
    </svg>)
  );
}


function MoveHorizontalIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <polyline points="18 8 22 12 18 16" />
      <polyline points="6 8 2 12 6 16" />
      <line x1="2" x2="22" y1="12" y2="12" />
    </svg>)
  );
}
